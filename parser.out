Grammar:

Rule 0     S' -> file
Rule 1     file -> file_component file
Rule 2     file -> file_component
Rule 3     file_component -> statements
Rule 4     file_component -> function_def
Rule 5     function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE
Rule 6     function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE
Rule 7     statements -> statements statements
Rule 8     statements -> statement
Rule 9     statement -> expr SEMICOLON
Rule 10    statement -> RETURN expr SEMICOLON
Rule 11    tuple -> expr COMMA expr
Rule 12    expr -> tuple
Rule 13    expr -> name
Rule 14    expr -> string
Rule 15    expr -> number
Rule 16    expr -> name LPAREN RPAREN
Rule 17    expr -> name LPAREN tuple RPAREN
Rule 18    expr -> LPAREN expr RPAREN
Rule 19    number -> DECIMAL
Rule 20    number -> BINARY
Rule 21    number -> OCTAL
Rule 22    number -> HEXIDECIMAL
Rule 23    string -> STRING
Rule 24    name -> DOUBLE
Rule 25    name -> FLOAT
Rule 26    name -> ULONG
Rule 27    name -> LONG
Rule 28    name -> UINT
Rule 29    name -> INT
Rule 30    name -> USHORT
Rule 31    name -> SHORT
Rule 32    name -> UCHAR
Rule 33    name -> CHAR
Rule 34    name -> NAME

Unused terminals:

    LBRACK
    SPACE
    NEWLINE
    COLON
    NUMBER
    TAB
    RBRACK

Terminals, with rules where they appear:

ARROW                : 5 6
BINARY               : 20
CHAR                 : 33
COLON                : 
COMMA                : 11
DECIMAL              : 19
DEF                  : 5 6
DOUBLE               : 24
FLOAT                : 25
HEXIDECIMAL          : 22
INT                  : 29
LBRACE               : 5 6
LBRACK               : 
LONG                 : 27
LPAREN               : 5 6 16 17 18
NAME                 : 34
NEWLINE              : 
NUMBER               : 
OCTAL                : 21
RBRACE               : 5 6
RBRACK               : 
RETURN               : 10
RPAREN               : 5 6 16 17 18
SEMICOLON            : 9 10
SHORT                : 31
SPACE                : 
STRING               : 23
TAB                  : 
UCHAR                : 32
UINT                 : 28
ULONG                : 26
USHORT               : 30
error                : 

Nonterminals, with rules where they appear:

expr                 : 9 10 11 11 18
file                 : 1 0
file_component       : 1 2
function_def         : 4
name                 : 5 5 6 6 13 16 17
number               : 15
statement            : 8
statements           : 3 5 6 7 7
string               : 14
tuple                : 6 12 17


state 0

    (0) S' -> . file
    (1) file -> . file_component file
    (2) file -> . file_component
    (3) file_component -> . statements
    (4) file_component -> . function_def
    (7) statements -> . statements statements
    (8) statements -> . statement
    (5) function_def -> . DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE
    (6) function_def -> . DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE
    (9) statement -> . expr SEMICOLON
    (10) statement -> . RETURN expr SEMICOLON
    (12) expr -> . tuple
    (13) expr -> . name
    (14) expr -> . string
    (15) expr -> . number
    (16) expr -> . name LPAREN RPAREN
    (17) expr -> . name LPAREN tuple RPAREN
    (18) expr -> . LPAREN expr RPAREN
    (11) tuple -> . expr COMMA expr
    (24) name -> . DOUBLE
    (25) name -> . FLOAT
    (26) name -> . ULONG
    (27) name -> . LONG
    (28) name -> . UINT
    (29) name -> . INT
    (30) name -> . USHORT
    (31) name -> . SHORT
    (32) name -> . UCHAR
    (33) name -> . CHAR
    (34) name -> . NAME
    (23) string -> . STRING
    (19) number -> . DECIMAL
    (20) number -> . BINARY
    (21) number -> . OCTAL
    (22) number -> . HEXIDECIMAL
    DEF             shift and go to state 6
    RETURN          shift and go to state 11
    LPAREN          shift and go to state 8
    DOUBLE          shift and go to state 14
    FLOAT           shift and go to state 15
    ULONG           shift and go to state 16
    LONG            shift and go to state 17
    UINT            shift and go to state 18
    INT             shift and go to state 19
    USHORT          shift and go to state 20
    SHORT           shift and go to state 21
    UCHAR           shift and go to state 22
    CHAR            shift and go to state 23
    NAME            shift and go to state 24
    STRING          shift and go to state 25
    DECIMAL         shift and go to state 26
    BINARY          shift and go to state 27
    OCTAL           shift and go to state 28
    HEXIDECIMAL     shift and go to state 29

    file                           shift and go to state 1
    file_component                 shift and go to state 2
    statements                     shift and go to state 3
    function_def                   shift and go to state 4
    statement                      shift and go to state 5
    name                           shift and go to state 7
    tuple                          shift and go to state 9
    expr                           shift and go to state 10
    string                         shift and go to state 12
    number                         shift and go to state 13

state 1

    (0) S' -> file .


state 2

    (1) file -> file_component . file
    (2) file -> file_component .
    (1) file -> . file_component file
    (2) file -> . file_component
    (3) file_component -> . statements
    (4) file_component -> . function_def
    (7) statements -> . statements statements
    (8) statements -> . statement
    (5) function_def -> . DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE
    (6) function_def -> . DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE
    (9) statement -> . expr SEMICOLON
    (10) statement -> . RETURN expr SEMICOLON
    (12) expr -> . tuple
    (13) expr -> . name
    (14) expr -> . string
    (15) expr -> . number
    (16) expr -> . name LPAREN RPAREN
    (17) expr -> . name LPAREN tuple RPAREN
    (18) expr -> . LPAREN expr RPAREN
    (11) tuple -> . expr COMMA expr
    (24) name -> . DOUBLE
    (25) name -> . FLOAT
    (26) name -> . ULONG
    (27) name -> . LONG
    (28) name -> . UINT
    (29) name -> . INT
    (30) name -> . USHORT
    (31) name -> . SHORT
    (32) name -> . UCHAR
    (33) name -> . CHAR
    (34) name -> . NAME
    (23) string -> . STRING
    (19) number -> . DECIMAL
    (20) number -> . BINARY
    (21) number -> . OCTAL
    (22) number -> . HEXIDECIMAL
    $end            reduce using rule 2 (file -> file_component .)
    DEF             shift and go to state 6
    RETURN          shift and go to state 11
    LPAREN          shift and go to state 8
    DOUBLE          shift and go to state 14
    FLOAT           shift and go to state 15
    ULONG           shift and go to state 16
    LONG            shift and go to state 17
    UINT            shift and go to state 18
    INT             shift and go to state 19
    USHORT          shift and go to state 20
    SHORT           shift and go to state 21
    UCHAR           shift and go to state 22
    CHAR            shift and go to state 23
    NAME            shift and go to state 24
    STRING          shift and go to state 25
    DECIMAL         shift and go to state 26
    BINARY          shift and go to state 27
    OCTAL           shift and go to state 28
    HEXIDECIMAL     shift and go to state 29

    file_component                 shift and go to state 2
    file                           shift and go to state 30
    statements                     shift and go to state 3
    function_def                   shift and go to state 4
    statement                      shift and go to state 5
    name                           shift and go to state 7
    tuple                          shift and go to state 9
    expr                           shift and go to state 10
    string                         shift and go to state 12
    number                         shift and go to state 13

state 3

    (3) file_component -> statements .
    (7) statements -> statements . statements
    (7) statements -> . statements statements
    (8) statements -> . statement
    (9) statement -> . expr SEMICOLON
    (10) statement -> . RETURN expr SEMICOLON
    (12) expr -> . tuple
    (13) expr -> . name
    (14) expr -> . string
    (15) expr -> . number
    (16) expr -> . name LPAREN RPAREN
    (17) expr -> . name LPAREN tuple RPAREN
    (18) expr -> . LPAREN expr RPAREN
    (11) tuple -> . expr COMMA expr
    (24) name -> . DOUBLE
    (25) name -> . FLOAT
    (26) name -> . ULONG
    (27) name -> . LONG
    (28) name -> . UINT
    (29) name -> . INT
    (30) name -> . USHORT
    (31) name -> . SHORT
    (32) name -> . UCHAR
    (33) name -> . CHAR
    (34) name -> . NAME
    (23) string -> . STRING
    (19) number -> . DECIMAL
    (20) number -> . BINARY
    (21) number -> . OCTAL
    (22) number -> . HEXIDECIMAL
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for ULONG resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for UINT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for USHORT resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for UCHAR resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for BINARY resolved as shift
  ! shift/reduce conflict for OCTAL resolved as shift
  ! shift/reduce conflict for HEXIDECIMAL resolved as shift
    DEF             reduce using rule 3 (file_component -> statements .)
    $end            reduce using rule 3 (file_component -> statements .)
    RETURN          shift and go to state 11
    LPAREN          shift and go to state 8
    DOUBLE          shift and go to state 14
    FLOAT           shift and go to state 15
    ULONG           shift and go to state 16
    LONG            shift and go to state 17
    UINT            shift and go to state 18
    INT             shift and go to state 19
    USHORT          shift and go to state 20
    SHORT           shift and go to state 21
    UCHAR           shift and go to state 22
    CHAR            shift and go to state 23
    NAME            shift and go to state 24
    STRING          shift and go to state 25
    DECIMAL         shift and go to state 26
    BINARY          shift and go to state 27
    OCTAL           shift and go to state 28
    HEXIDECIMAL     shift and go to state 29

    statements                     shift and go to state 31
    statement                      shift and go to state 5
    expr                           shift and go to state 10
    tuple                          shift and go to state 9
    name                           shift and go to state 7
    string                         shift and go to state 12
    number                         shift and go to state 13

state 4

    (4) file_component -> function_def .
    DEF             reduce using rule 4 (file_component -> function_def .)
    RETURN          reduce using rule 4 (file_component -> function_def .)
    LPAREN          reduce using rule 4 (file_component -> function_def .)
    DOUBLE          reduce using rule 4 (file_component -> function_def .)
    FLOAT           reduce using rule 4 (file_component -> function_def .)
    ULONG           reduce using rule 4 (file_component -> function_def .)
    LONG            reduce using rule 4 (file_component -> function_def .)
    UINT            reduce using rule 4 (file_component -> function_def .)
    INT             reduce using rule 4 (file_component -> function_def .)
    USHORT          reduce using rule 4 (file_component -> function_def .)
    SHORT           reduce using rule 4 (file_component -> function_def .)
    UCHAR           reduce using rule 4 (file_component -> function_def .)
    CHAR            reduce using rule 4 (file_component -> function_def .)
    NAME            reduce using rule 4 (file_component -> function_def .)
    STRING          reduce using rule 4 (file_component -> function_def .)
    DECIMAL         reduce using rule 4 (file_component -> function_def .)
    BINARY          reduce using rule 4 (file_component -> function_def .)
    OCTAL           reduce using rule 4 (file_component -> function_def .)
    HEXIDECIMAL     reduce using rule 4 (file_component -> function_def .)
    $end            reduce using rule 4 (file_component -> function_def .)


state 5

    (8) statements -> statement .
    RETURN          reduce using rule 8 (statements -> statement .)
    LPAREN          reduce using rule 8 (statements -> statement .)
    DOUBLE          reduce using rule 8 (statements -> statement .)
    FLOAT           reduce using rule 8 (statements -> statement .)
    ULONG           reduce using rule 8 (statements -> statement .)
    LONG            reduce using rule 8 (statements -> statement .)
    UINT            reduce using rule 8 (statements -> statement .)
    INT             reduce using rule 8 (statements -> statement .)
    USHORT          reduce using rule 8 (statements -> statement .)
    SHORT           reduce using rule 8 (statements -> statement .)
    UCHAR           reduce using rule 8 (statements -> statement .)
    CHAR            reduce using rule 8 (statements -> statement .)
    NAME            reduce using rule 8 (statements -> statement .)
    STRING          reduce using rule 8 (statements -> statement .)
    DECIMAL         reduce using rule 8 (statements -> statement .)
    BINARY          reduce using rule 8 (statements -> statement .)
    OCTAL           reduce using rule 8 (statements -> statement .)
    HEXIDECIMAL     reduce using rule 8 (statements -> statement .)
    DEF             reduce using rule 8 (statements -> statement .)
    $end            reduce using rule 8 (statements -> statement .)
    RBRACE          reduce using rule 8 (statements -> statement .)


state 6

    (5) function_def -> DEF . name LPAREN RPAREN ARROW name LBRACE statements RBRACE
    (6) function_def -> DEF . name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE
    (24) name -> . DOUBLE
    (25) name -> . FLOAT
    (26) name -> . ULONG
    (27) name -> . LONG
    (28) name -> . UINT
    (29) name -> . INT
    (30) name -> . USHORT
    (31) name -> . SHORT
    (32) name -> . UCHAR
    (33) name -> . CHAR
    (34) name -> . NAME
    DOUBLE          shift and go to state 14
    FLOAT           shift and go to state 15
    ULONG           shift and go to state 16
    LONG            shift and go to state 17
    UINT            shift and go to state 18
    INT             shift and go to state 19
    USHORT          shift and go to state 20
    SHORT           shift and go to state 21
    UCHAR           shift and go to state 22
    CHAR            shift and go to state 23
    NAME            shift and go to state 24

    name                           shift and go to state 32

state 7

    (13) expr -> name .
    (16) expr -> name . LPAREN RPAREN
    (17) expr -> name . LPAREN tuple RPAREN
    SEMICOLON       reduce using rule 13 (expr -> name .)
    COMMA           reduce using rule 13 (expr -> name .)
    RPAREN          reduce using rule 13 (expr -> name .)
    LPAREN          shift and go to state 33


state 8

    (18) expr -> LPAREN . expr RPAREN
    (12) expr -> . tuple
    (13) expr -> . name
    (14) expr -> . string
    (15) expr -> . number
    (16) expr -> . name LPAREN RPAREN
    (17) expr -> . name LPAREN tuple RPAREN
    (18) expr -> . LPAREN expr RPAREN
    (11) tuple -> . expr COMMA expr
    (24) name -> . DOUBLE
    (25) name -> . FLOAT
    (26) name -> . ULONG
    (27) name -> . LONG
    (28) name -> . UINT
    (29) name -> . INT
    (30) name -> . USHORT
    (31) name -> . SHORT
    (32) name -> . UCHAR
    (33) name -> . CHAR
    (34) name -> . NAME
    (23) string -> . STRING
    (19) number -> . DECIMAL
    (20) number -> . BINARY
    (21) number -> . OCTAL
    (22) number -> . HEXIDECIMAL
    LPAREN          shift and go to state 8
    DOUBLE          shift and go to state 14
    FLOAT           shift and go to state 15
    ULONG           shift and go to state 16
    LONG            shift and go to state 17
    UINT            shift and go to state 18
    INT             shift and go to state 19
    USHORT          shift and go to state 20
    SHORT           shift and go to state 21
    UCHAR           shift and go to state 22
    CHAR            shift and go to state 23
    NAME            shift and go to state 24
    STRING          shift and go to state 25
    DECIMAL         shift and go to state 26
    BINARY          shift and go to state 27
    OCTAL           shift and go to state 28
    HEXIDECIMAL     shift and go to state 29

    expr                           shift and go to state 34
    tuple                          shift and go to state 9
    name                           shift and go to state 7
    string                         shift and go to state 12
    number                         shift and go to state 13

state 9

    (12) expr -> tuple .
    SEMICOLON       reduce using rule 12 (expr -> tuple .)
    COMMA           reduce using rule 12 (expr -> tuple .)
    RPAREN          reduce using rule 12 (expr -> tuple .)


state 10

    (9) statement -> expr . SEMICOLON
    (11) tuple -> expr . COMMA expr
    SEMICOLON       shift and go to state 35
    COMMA           shift and go to state 36


state 11

    (10) statement -> RETURN . expr SEMICOLON
    (12) expr -> . tuple
    (13) expr -> . name
    (14) expr -> . string
    (15) expr -> . number
    (16) expr -> . name LPAREN RPAREN
    (17) expr -> . name LPAREN tuple RPAREN
    (18) expr -> . LPAREN expr RPAREN
    (11) tuple -> . expr COMMA expr
    (24) name -> . DOUBLE
    (25) name -> . FLOAT
    (26) name -> . ULONG
    (27) name -> . LONG
    (28) name -> . UINT
    (29) name -> . INT
    (30) name -> . USHORT
    (31) name -> . SHORT
    (32) name -> . UCHAR
    (33) name -> . CHAR
    (34) name -> . NAME
    (23) string -> . STRING
    (19) number -> . DECIMAL
    (20) number -> . BINARY
    (21) number -> . OCTAL
    (22) number -> . HEXIDECIMAL
    LPAREN          shift and go to state 8
    DOUBLE          shift and go to state 14
    FLOAT           shift and go to state 15
    ULONG           shift and go to state 16
    LONG            shift and go to state 17
    UINT            shift and go to state 18
    INT             shift and go to state 19
    USHORT          shift and go to state 20
    SHORT           shift and go to state 21
    UCHAR           shift and go to state 22
    CHAR            shift and go to state 23
    NAME            shift and go to state 24
    STRING          shift and go to state 25
    DECIMAL         shift and go to state 26
    BINARY          shift and go to state 27
    OCTAL           shift and go to state 28
    HEXIDECIMAL     shift and go to state 29

    expr                           shift and go to state 37
    tuple                          shift and go to state 9
    name                           shift and go to state 7
    string                         shift and go to state 12
    number                         shift and go to state 13

state 12

    (14) expr -> string .
    SEMICOLON       reduce using rule 14 (expr -> string .)
    COMMA           reduce using rule 14 (expr -> string .)
    RPAREN          reduce using rule 14 (expr -> string .)


state 13

    (15) expr -> number .
    SEMICOLON       reduce using rule 15 (expr -> number .)
    COMMA           reduce using rule 15 (expr -> number .)
    RPAREN          reduce using rule 15 (expr -> number .)


state 14

    (24) name -> DOUBLE .
    LPAREN          reduce using rule 24 (name -> DOUBLE .)
    SEMICOLON       reduce using rule 24 (name -> DOUBLE .)
    COMMA           reduce using rule 24 (name -> DOUBLE .)
    RPAREN          reduce using rule 24 (name -> DOUBLE .)
    LBRACE          reduce using rule 24 (name -> DOUBLE .)


state 15

    (25) name -> FLOAT .
    LPAREN          reduce using rule 25 (name -> FLOAT .)
    SEMICOLON       reduce using rule 25 (name -> FLOAT .)
    COMMA           reduce using rule 25 (name -> FLOAT .)
    RPAREN          reduce using rule 25 (name -> FLOAT .)
    LBRACE          reduce using rule 25 (name -> FLOAT .)


state 16

    (26) name -> ULONG .
    LPAREN          reduce using rule 26 (name -> ULONG .)
    SEMICOLON       reduce using rule 26 (name -> ULONG .)
    COMMA           reduce using rule 26 (name -> ULONG .)
    RPAREN          reduce using rule 26 (name -> ULONG .)
    LBRACE          reduce using rule 26 (name -> ULONG .)


state 17

    (27) name -> LONG .
    LPAREN          reduce using rule 27 (name -> LONG .)
    SEMICOLON       reduce using rule 27 (name -> LONG .)
    COMMA           reduce using rule 27 (name -> LONG .)
    RPAREN          reduce using rule 27 (name -> LONG .)
    LBRACE          reduce using rule 27 (name -> LONG .)


state 18

    (28) name -> UINT .
    LPAREN          reduce using rule 28 (name -> UINT .)
    SEMICOLON       reduce using rule 28 (name -> UINT .)
    COMMA           reduce using rule 28 (name -> UINT .)
    RPAREN          reduce using rule 28 (name -> UINT .)
    LBRACE          reduce using rule 28 (name -> UINT .)


state 19

    (29) name -> INT .
    LPAREN          reduce using rule 29 (name -> INT .)
    SEMICOLON       reduce using rule 29 (name -> INT .)
    COMMA           reduce using rule 29 (name -> INT .)
    RPAREN          reduce using rule 29 (name -> INT .)
    LBRACE          reduce using rule 29 (name -> INT .)


state 20

    (30) name -> USHORT .
    LPAREN          reduce using rule 30 (name -> USHORT .)
    SEMICOLON       reduce using rule 30 (name -> USHORT .)
    COMMA           reduce using rule 30 (name -> USHORT .)
    RPAREN          reduce using rule 30 (name -> USHORT .)
    LBRACE          reduce using rule 30 (name -> USHORT .)


state 21

    (31) name -> SHORT .
    LPAREN          reduce using rule 31 (name -> SHORT .)
    SEMICOLON       reduce using rule 31 (name -> SHORT .)
    COMMA           reduce using rule 31 (name -> SHORT .)
    RPAREN          reduce using rule 31 (name -> SHORT .)
    LBRACE          reduce using rule 31 (name -> SHORT .)


state 22

    (32) name -> UCHAR .
    LPAREN          reduce using rule 32 (name -> UCHAR .)
    SEMICOLON       reduce using rule 32 (name -> UCHAR .)
    COMMA           reduce using rule 32 (name -> UCHAR .)
    RPAREN          reduce using rule 32 (name -> UCHAR .)
    LBRACE          reduce using rule 32 (name -> UCHAR .)


state 23

    (33) name -> CHAR .
    LPAREN          reduce using rule 33 (name -> CHAR .)
    SEMICOLON       reduce using rule 33 (name -> CHAR .)
    COMMA           reduce using rule 33 (name -> CHAR .)
    RPAREN          reduce using rule 33 (name -> CHAR .)
    LBRACE          reduce using rule 33 (name -> CHAR .)


state 24

    (34) name -> NAME .
    LPAREN          reduce using rule 34 (name -> NAME .)
    SEMICOLON       reduce using rule 34 (name -> NAME .)
    COMMA           reduce using rule 34 (name -> NAME .)
    RPAREN          reduce using rule 34 (name -> NAME .)
    LBRACE          reduce using rule 34 (name -> NAME .)


state 25

    (23) string -> STRING .
    SEMICOLON       reduce using rule 23 (string -> STRING .)
    COMMA           reduce using rule 23 (string -> STRING .)
    RPAREN          reduce using rule 23 (string -> STRING .)


state 26

    (19) number -> DECIMAL .
    SEMICOLON       reduce using rule 19 (number -> DECIMAL .)
    COMMA           reduce using rule 19 (number -> DECIMAL .)
    RPAREN          reduce using rule 19 (number -> DECIMAL .)


state 27

    (20) number -> BINARY .
    SEMICOLON       reduce using rule 20 (number -> BINARY .)
    COMMA           reduce using rule 20 (number -> BINARY .)
    RPAREN          reduce using rule 20 (number -> BINARY .)


state 28

    (21) number -> OCTAL .
    SEMICOLON       reduce using rule 21 (number -> OCTAL .)
    COMMA           reduce using rule 21 (number -> OCTAL .)
    RPAREN          reduce using rule 21 (number -> OCTAL .)


state 29

    (22) number -> HEXIDECIMAL .
    SEMICOLON       reduce using rule 22 (number -> HEXIDECIMAL .)
    COMMA           reduce using rule 22 (number -> HEXIDECIMAL .)
    RPAREN          reduce using rule 22 (number -> HEXIDECIMAL .)


state 30

    (1) file -> file_component file .
    $end            reduce using rule 1 (file -> file_component file .)


state 31

    (7) statements -> statements statements .
    (7) statements -> statements . statements
    (7) statements -> . statements statements
    (8) statements -> . statement
    (9) statement -> . expr SEMICOLON
    (10) statement -> . RETURN expr SEMICOLON
    (12) expr -> . tuple
    (13) expr -> . name
    (14) expr -> . string
    (15) expr -> . number
    (16) expr -> . name LPAREN RPAREN
    (17) expr -> . name LPAREN tuple RPAREN
    (18) expr -> . LPAREN expr RPAREN
    (11) tuple -> . expr COMMA expr
    (24) name -> . DOUBLE
    (25) name -> . FLOAT
    (26) name -> . ULONG
    (27) name -> . LONG
    (28) name -> . UINT
    (29) name -> . INT
    (30) name -> . USHORT
    (31) name -> . SHORT
    (32) name -> . UCHAR
    (33) name -> . CHAR
    (34) name -> . NAME
    (23) string -> . STRING
    (19) number -> . DECIMAL
    (20) number -> . BINARY
    (21) number -> . OCTAL
    (22) number -> . HEXIDECIMAL
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for ULONG resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for UINT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for USHORT resolved as shift
  ! shift/reduce conflict for SHORT resolved as shift
  ! shift/reduce conflict for UCHAR resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for BINARY resolved as shift
  ! shift/reduce conflict for OCTAL resolved as shift
  ! shift/reduce conflict for HEXIDECIMAL resolved as shift
    DEF             reduce using rule 7 (statements -> statements statements .)
    $end            reduce using rule 7 (statements -> statements statements .)
    RBRACE          reduce using rule 7 (statements -> statements statements .)
    RETURN          shift and go to state 11
    LPAREN          shift and go to state 8
    DOUBLE          shift and go to state 14
    FLOAT           shift and go to state 15
    ULONG           shift and go to state 16
    LONG            shift and go to state 17
    UINT            shift and go to state 18
    INT             shift and go to state 19
    USHORT          shift and go to state 20
    SHORT           shift and go to state 21
    UCHAR           shift and go to state 22
    CHAR            shift and go to state 23
    NAME            shift and go to state 24
    STRING          shift and go to state 25
    DECIMAL         shift and go to state 26
    BINARY          shift and go to state 27
    OCTAL           shift and go to state 28
    HEXIDECIMAL     shift and go to state 29

    statements                     shift and go to state 31
    statement                      shift and go to state 5
    expr                           shift and go to state 10
    tuple                          shift and go to state 9
    name                           shift and go to state 7
    string                         shift and go to state 12
    number                         shift and go to state 13

state 32

    (5) function_def -> DEF name . LPAREN RPAREN ARROW name LBRACE statements RBRACE
    (6) function_def -> DEF name . LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE
    LPAREN          shift and go to state 38


state 33

    (16) expr -> name LPAREN . RPAREN
    (17) expr -> name LPAREN . tuple RPAREN
    (11) tuple -> . expr COMMA expr
    (12) expr -> . tuple
    (13) expr -> . name
    (14) expr -> . string
    (15) expr -> . number
    (16) expr -> . name LPAREN RPAREN
    (17) expr -> . name LPAREN tuple RPAREN
    (18) expr -> . LPAREN expr RPAREN
    (24) name -> . DOUBLE
    (25) name -> . FLOAT
    (26) name -> . ULONG
    (27) name -> . LONG
    (28) name -> . UINT
    (29) name -> . INT
    (30) name -> . USHORT
    (31) name -> . SHORT
    (32) name -> . UCHAR
    (33) name -> . CHAR
    (34) name -> . NAME
    (23) string -> . STRING
    (19) number -> . DECIMAL
    (20) number -> . BINARY
    (21) number -> . OCTAL
    (22) number -> . HEXIDECIMAL
    RPAREN          shift and go to state 39
    LPAREN          shift and go to state 8
    DOUBLE          shift and go to state 14
    FLOAT           shift and go to state 15
    ULONG           shift and go to state 16
    LONG            shift and go to state 17
    UINT            shift and go to state 18
    INT             shift and go to state 19
    USHORT          shift and go to state 20
    SHORT           shift and go to state 21
    UCHAR           shift and go to state 22
    CHAR            shift and go to state 23
    NAME            shift and go to state 24
    STRING          shift and go to state 25
    DECIMAL         shift and go to state 26
    BINARY          shift and go to state 27
    OCTAL           shift and go to state 28
    HEXIDECIMAL     shift and go to state 29

    name                           shift and go to state 7
    tuple                          shift and go to state 40
    expr                           shift and go to state 41
    string                         shift and go to state 12
    number                         shift and go to state 13

state 34

    (18) expr -> LPAREN expr . RPAREN
    (11) tuple -> expr . COMMA expr
    RPAREN          shift and go to state 42
    COMMA           shift and go to state 36


state 35

    (9) statement -> expr SEMICOLON .
    RETURN          reduce using rule 9 (statement -> expr SEMICOLON .)
    LPAREN          reduce using rule 9 (statement -> expr SEMICOLON .)
    DOUBLE          reduce using rule 9 (statement -> expr SEMICOLON .)
    FLOAT           reduce using rule 9 (statement -> expr SEMICOLON .)
    ULONG           reduce using rule 9 (statement -> expr SEMICOLON .)
    LONG            reduce using rule 9 (statement -> expr SEMICOLON .)
    UINT            reduce using rule 9 (statement -> expr SEMICOLON .)
    INT             reduce using rule 9 (statement -> expr SEMICOLON .)
    USHORT          reduce using rule 9 (statement -> expr SEMICOLON .)
    SHORT           reduce using rule 9 (statement -> expr SEMICOLON .)
    UCHAR           reduce using rule 9 (statement -> expr SEMICOLON .)
    CHAR            reduce using rule 9 (statement -> expr SEMICOLON .)
    NAME            reduce using rule 9 (statement -> expr SEMICOLON .)
    STRING          reduce using rule 9 (statement -> expr SEMICOLON .)
    DECIMAL         reduce using rule 9 (statement -> expr SEMICOLON .)
    BINARY          reduce using rule 9 (statement -> expr SEMICOLON .)
    OCTAL           reduce using rule 9 (statement -> expr SEMICOLON .)
    HEXIDECIMAL     reduce using rule 9 (statement -> expr SEMICOLON .)
    DEF             reduce using rule 9 (statement -> expr SEMICOLON .)
    $end            reduce using rule 9 (statement -> expr SEMICOLON .)
    RBRACE          reduce using rule 9 (statement -> expr SEMICOLON .)


state 36

    (11) tuple -> expr COMMA . expr
    (12) expr -> . tuple
    (13) expr -> . name
    (14) expr -> . string
    (15) expr -> . number
    (16) expr -> . name LPAREN RPAREN
    (17) expr -> . name LPAREN tuple RPAREN
    (18) expr -> . LPAREN expr RPAREN
    (11) tuple -> . expr COMMA expr
    (24) name -> . DOUBLE
    (25) name -> . FLOAT
    (26) name -> . ULONG
    (27) name -> . LONG
    (28) name -> . UINT
    (29) name -> . INT
    (30) name -> . USHORT
    (31) name -> . SHORT
    (32) name -> . UCHAR
    (33) name -> . CHAR
    (34) name -> . NAME
    (23) string -> . STRING
    (19) number -> . DECIMAL
    (20) number -> . BINARY
    (21) number -> . OCTAL
    (22) number -> . HEXIDECIMAL
    LPAREN          shift and go to state 8
    DOUBLE          shift and go to state 14
    FLOAT           shift and go to state 15
    ULONG           shift and go to state 16
    LONG            shift and go to state 17
    UINT            shift and go to state 18
    INT             shift and go to state 19
    USHORT          shift and go to state 20
    SHORT           shift and go to state 21
    UCHAR           shift and go to state 22
    CHAR            shift and go to state 23
    NAME            shift and go to state 24
    STRING          shift and go to state 25
    DECIMAL         shift and go to state 26
    BINARY          shift and go to state 27
    OCTAL           shift and go to state 28
    HEXIDECIMAL     shift and go to state 29

    expr                           shift and go to state 43
    tuple                          shift and go to state 9
    name                           shift and go to state 7
    string                         shift and go to state 12
    number                         shift and go to state 13

state 37

    (10) statement -> RETURN expr . SEMICOLON
    (11) tuple -> expr . COMMA expr
    SEMICOLON       shift and go to state 44
    COMMA           shift and go to state 36


state 38

    (5) function_def -> DEF name LPAREN . RPAREN ARROW name LBRACE statements RBRACE
    (6) function_def -> DEF name LPAREN . tuple RPAREN ARROW name LBRACE statements RBRACE
    (11) tuple -> . expr COMMA expr
    (12) expr -> . tuple
    (13) expr -> . name
    (14) expr -> . string
    (15) expr -> . number
    (16) expr -> . name LPAREN RPAREN
    (17) expr -> . name LPAREN tuple RPAREN
    (18) expr -> . LPAREN expr RPAREN
    (24) name -> . DOUBLE
    (25) name -> . FLOAT
    (26) name -> . ULONG
    (27) name -> . LONG
    (28) name -> . UINT
    (29) name -> . INT
    (30) name -> . USHORT
    (31) name -> . SHORT
    (32) name -> . UCHAR
    (33) name -> . CHAR
    (34) name -> . NAME
    (23) string -> . STRING
    (19) number -> . DECIMAL
    (20) number -> . BINARY
    (21) number -> . OCTAL
    (22) number -> . HEXIDECIMAL
    RPAREN          shift and go to state 45
    LPAREN          shift and go to state 8
    DOUBLE          shift and go to state 14
    FLOAT           shift and go to state 15
    ULONG           shift and go to state 16
    LONG            shift and go to state 17
    UINT            shift and go to state 18
    INT             shift and go to state 19
    USHORT          shift and go to state 20
    SHORT           shift and go to state 21
    UCHAR           shift and go to state 22
    CHAR            shift and go to state 23
    NAME            shift and go to state 24
    STRING          shift and go to state 25
    DECIMAL         shift and go to state 26
    BINARY          shift and go to state 27
    OCTAL           shift and go to state 28
    HEXIDECIMAL     shift and go to state 29

    name                           shift and go to state 7
    tuple                          shift and go to state 46
    expr                           shift and go to state 41
    string                         shift and go to state 12
    number                         shift and go to state 13

state 39

    (16) expr -> name LPAREN RPAREN .
    SEMICOLON       reduce using rule 16 (expr -> name LPAREN RPAREN .)
    COMMA           reduce using rule 16 (expr -> name LPAREN RPAREN .)
    RPAREN          reduce using rule 16 (expr -> name LPAREN RPAREN .)


state 40

    (17) expr -> name LPAREN tuple . RPAREN
    (12) expr -> tuple .
    RPAREN          shift and go to state 47
    COMMA           reduce using rule 12 (expr -> tuple .)


state 41

    (11) tuple -> expr . COMMA expr
    COMMA           shift and go to state 36


state 42

    (18) expr -> LPAREN expr RPAREN .
    SEMICOLON       reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 18 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 18 (expr -> LPAREN expr RPAREN .)


state 43

    (11) tuple -> expr COMMA expr .
    (11) tuple -> expr . COMMA expr
  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 11 (tuple -> expr COMMA expr .)
    RPAREN          reduce using rule 11 (tuple -> expr COMMA expr .)
    COMMA           shift and go to state 36


state 44

    (10) statement -> RETURN expr SEMICOLON .
    RETURN          reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    LPAREN          reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    DOUBLE          reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    FLOAT           reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    ULONG           reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    LONG            reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    UINT            reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    INT             reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    USHORT          reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    SHORT           reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    UCHAR           reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    CHAR            reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    NAME            reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    STRING          reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    DECIMAL         reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    BINARY          reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    OCTAL           reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    HEXIDECIMAL     reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    DEF             reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    $end            reduce using rule 10 (statement -> RETURN expr SEMICOLON .)
    RBRACE          reduce using rule 10 (statement -> RETURN expr SEMICOLON .)


state 45

    (5) function_def -> DEF name LPAREN RPAREN . ARROW name LBRACE statements RBRACE
    ARROW           shift and go to state 48


state 46

    (6) function_def -> DEF name LPAREN tuple . RPAREN ARROW name LBRACE statements RBRACE
    (12) expr -> tuple .
    RPAREN          shift and go to state 49
    COMMA           reduce using rule 12 (expr -> tuple .)


state 47

    (17) expr -> name LPAREN tuple RPAREN .
    SEMICOLON       reduce using rule 17 (expr -> name LPAREN tuple RPAREN .)
    COMMA           reduce using rule 17 (expr -> name LPAREN tuple RPAREN .)
    RPAREN          reduce using rule 17 (expr -> name LPAREN tuple RPAREN .)


state 48

    (5) function_def -> DEF name LPAREN RPAREN ARROW . name LBRACE statements RBRACE
    (24) name -> . DOUBLE
    (25) name -> . FLOAT
    (26) name -> . ULONG
    (27) name -> . LONG
    (28) name -> . UINT
    (29) name -> . INT
    (30) name -> . USHORT
    (31) name -> . SHORT
    (32) name -> . UCHAR
    (33) name -> . CHAR
    (34) name -> . NAME
    DOUBLE          shift and go to state 14
    FLOAT           shift and go to state 15
    ULONG           shift and go to state 16
    LONG            shift and go to state 17
    UINT            shift and go to state 18
    INT             shift and go to state 19
    USHORT          shift and go to state 20
    SHORT           shift and go to state 21
    UCHAR           shift and go to state 22
    CHAR            shift and go to state 23
    NAME            shift and go to state 24

    name                           shift and go to state 50

state 49

    (6) function_def -> DEF name LPAREN tuple RPAREN . ARROW name LBRACE statements RBRACE
    ARROW           shift and go to state 51


state 50

    (5) function_def -> DEF name LPAREN RPAREN ARROW name . LBRACE statements RBRACE
    LBRACE          shift and go to state 52


state 51

    (6) function_def -> DEF name LPAREN tuple RPAREN ARROW . name LBRACE statements RBRACE
    (24) name -> . DOUBLE
    (25) name -> . FLOAT
    (26) name -> . ULONG
    (27) name -> . LONG
    (28) name -> . UINT
    (29) name -> . INT
    (30) name -> . USHORT
    (31) name -> . SHORT
    (32) name -> . UCHAR
    (33) name -> . CHAR
    (34) name -> . NAME
    DOUBLE          shift and go to state 14
    FLOAT           shift and go to state 15
    ULONG           shift and go to state 16
    LONG            shift and go to state 17
    UINT            shift and go to state 18
    INT             shift and go to state 19
    USHORT          shift and go to state 20
    SHORT           shift and go to state 21
    UCHAR           shift and go to state 22
    CHAR            shift and go to state 23
    NAME            shift and go to state 24

    name                           shift and go to state 53

state 52

    (5) function_def -> DEF name LPAREN RPAREN ARROW name LBRACE . statements RBRACE
    (7) statements -> . statements statements
    (8) statements -> . statement
    (9) statement -> . expr SEMICOLON
    (10) statement -> . RETURN expr SEMICOLON
    (12) expr -> . tuple
    (13) expr -> . name
    (14) expr -> . string
    (15) expr -> . number
    (16) expr -> . name LPAREN RPAREN
    (17) expr -> . name LPAREN tuple RPAREN
    (18) expr -> . LPAREN expr RPAREN
    (11) tuple -> . expr COMMA expr
    (24) name -> . DOUBLE
    (25) name -> . FLOAT
    (26) name -> . ULONG
    (27) name -> . LONG
    (28) name -> . UINT
    (29) name -> . INT
    (30) name -> . USHORT
    (31) name -> . SHORT
    (32) name -> . UCHAR
    (33) name -> . CHAR
    (34) name -> . NAME
    (23) string -> . STRING
    (19) number -> . DECIMAL
    (20) number -> . BINARY
    (21) number -> . OCTAL
    (22) number -> . HEXIDECIMAL
    RETURN          shift and go to state 11
    LPAREN          shift and go to state 8
    DOUBLE          shift and go to state 14
    FLOAT           shift and go to state 15
    ULONG           shift and go to state 16
    LONG            shift and go to state 17
    UINT            shift and go to state 18
    INT             shift and go to state 19
    USHORT          shift and go to state 20
    SHORT           shift and go to state 21
    UCHAR           shift and go to state 22
    CHAR            shift and go to state 23
    NAME            shift and go to state 24
    STRING          shift and go to state 25
    DECIMAL         shift and go to state 26
    BINARY          shift and go to state 27
    OCTAL           shift and go to state 28
    HEXIDECIMAL     shift and go to state 29

    name                           shift and go to state 7
    statements                     shift and go to state 54
    statement                      shift and go to state 5
    expr                           shift and go to state 10
    tuple                          shift and go to state 9
    string                         shift and go to state 12
    number                         shift and go to state 13

state 53

    (6) function_def -> DEF name LPAREN tuple RPAREN ARROW name . LBRACE statements RBRACE
    LBRACE          shift and go to state 55


state 54

    (5) function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements . RBRACE
    (7) statements -> statements . statements
    (7) statements -> . statements statements
    (8) statements -> . statement
    (9) statement -> . expr SEMICOLON
    (10) statement -> . RETURN expr SEMICOLON
    (12) expr -> . tuple
    (13) expr -> . name
    (14) expr -> . string
    (15) expr -> . number
    (16) expr -> . name LPAREN RPAREN
    (17) expr -> . name LPAREN tuple RPAREN
    (18) expr -> . LPAREN expr RPAREN
    (11) tuple -> . expr COMMA expr
    (24) name -> . DOUBLE
    (25) name -> . FLOAT
    (26) name -> . ULONG
    (27) name -> . LONG
    (28) name -> . UINT
    (29) name -> . INT
    (30) name -> . USHORT
    (31) name -> . SHORT
    (32) name -> . UCHAR
    (33) name -> . CHAR
    (34) name -> . NAME
    (23) string -> . STRING
    (19) number -> . DECIMAL
    (20) number -> . BINARY
    (21) number -> . OCTAL
    (22) number -> . HEXIDECIMAL
    RBRACE          shift and go to state 56
    RETURN          shift and go to state 11
    LPAREN          shift and go to state 8
    DOUBLE          shift and go to state 14
    FLOAT           shift and go to state 15
    ULONG           shift and go to state 16
    LONG            shift and go to state 17
    UINT            shift and go to state 18
    INT             shift and go to state 19
    USHORT          shift and go to state 20
    SHORT           shift and go to state 21
    UCHAR           shift and go to state 22
    CHAR            shift and go to state 23
    NAME            shift and go to state 24
    STRING          shift and go to state 25
    DECIMAL         shift and go to state 26
    BINARY          shift and go to state 27
    OCTAL           shift and go to state 28
    HEXIDECIMAL     shift and go to state 29

    name                           shift and go to state 7
    statements                     shift and go to state 31
    statement                      shift and go to state 5
    expr                           shift and go to state 10
    tuple                          shift and go to state 9
    string                         shift and go to state 12
    number                         shift and go to state 13

state 55

    (6) function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE . statements RBRACE
    (7) statements -> . statements statements
    (8) statements -> . statement
    (9) statement -> . expr SEMICOLON
    (10) statement -> . RETURN expr SEMICOLON
    (12) expr -> . tuple
    (13) expr -> . name
    (14) expr -> . string
    (15) expr -> . number
    (16) expr -> . name LPAREN RPAREN
    (17) expr -> . name LPAREN tuple RPAREN
    (18) expr -> . LPAREN expr RPAREN
    (11) tuple -> . expr COMMA expr
    (24) name -> . DOUBLE
    (25) name -> . FLOAT
    (26) name -> . ULONG
    (27) name -> . LONG
    (28) name -> . UINT
    (29) name -> . INT
    (30) name -> . USHORT
    (31) name -> . SHORT
    (32) name -> . UCHAR
    (33) name -> . CHAR
    (34) name -> . NAME
    (23) string -> . STRING
    (19) number -> . DECIMAL
    (20) number -> . BINARY
    (21) number -> . OCTAL
    (22) number -> . HEXIDECIMAL
    RETURN          shift and go to state 11
    LPAREN          shift and go to state 8
    DOUBLE          shift and go to state 14
    FLOAT           shift and go to state 15
    ULONG           shift and go to state 16
    LONG            shift and go to state 17
    UINT            shift and go to state 18
    INT             shift and go to state 19
    USHORT          shift and go to state 20
    SHORT           shift and go to state 21
    UCHAR           shift and go to state 22
    CHAR            shift and go to state 23
    NAME            shift and go to state 24
    STRING          shift and go to state 25
    DECIMAL         shift and go to state 26
    BINARY          shift and go to state 27
    OCTAL           shift and go to state 28
    HEXIDECIMAL     shift and go to state 29

    name                           shift and go to state 7
    tuple                          shift and go to state 9
    statements                     shift and go to state 57
    statement                      shift and go to state 5
    expr                           shift and go to state 10
    string                         shift and go to state 12
    number                         shift and go to state 13

state 56

    (5) function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .
    DEF             reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    RETURN          reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    LPAREN          reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    FLOAT           reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    ULONG           reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    LONG            reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    UINT            reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    INT             reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    USHORT          reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    SHORT           reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    UCHAR           reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    CHAR            reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    NAME            reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    STRING          reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    DECIMAL         reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    BINARY          reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    OCTAL           reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    HEXIDECIMAL     reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)
    $end            reduce using rule 5 (function_def -> DEF name LPAREN RPAREN ARROW name LBRACE statements RBRACE .)


state 57

    (6) function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements . RBRACE
    (7) statements -> statements . statements
    (7) statements -> . statements statements
    (8) statements -> . statement
    (9) statement -> . expr SEMICOLON
    (10) statement -> . RETURN expr SEMICOLON
    (12) expr -> . tuple
    (13) expr -> . name
    (14) expr -> . string
    (15) expr -> . number
    (16) expr -> . name LPAREN RPAREN
    (17) expr -> . name LPAREN tuple RPAREN
    (18) expr -> . LPAREN expr RPAREN
    (11) tuple -> . expr COMMA expr
    (24) name -> . DOUBLE
    (25) name -> . FLOAT
    (26) name -> . ULONG
    (27) name -> . LONG
    (28) name -> . UINT
    (29) name -> . INT
    (30) name -> . USHORT
    (31) name -> . SHORT
    (32) name -> . UCHAR
    (33) name -> . CHAR
    (34) name -> . NAME
    (23) string -> . STRING
    (19) number -> . DECIMAL
    (20) number -> . BINARY
    (21) number -> . OCTAL
    (22) number -> . HEXIDECIMAL
    RBRACE          shift and go to state 58
    RETURN          shift and go to state 11
    LPAREN          shift and go to state 8
    DOUBLE          shift and go to state 14
    FLOAT           shift and go to state 15
    ULONG           shift and go to state 16
    LONG            shift and go to state 17
    UINT            shift and go to state 18
    INT             shift and go to state 19
    USHORT          shift and go to state 20
    SHORT           shift and go to state 21
    UCHAR           shift and go to state 22
    CHAR            shift and go to state 23
    NAME            shift and go to state 24
    STRING          shift and go to state 25
    DECIMAL         shift and go to state 26
    BINARY          shift and go to state 27
    OCTAL           shift and go to state 28
    HEXIDECIMAL     shift and go to state 29

    name                           shift and go to state 7
    tuple                          shift and go to state 9
    statements                     shift and go to state 31
    statement                      shift and go to state 5
    expr                           shift and go to state 10
    string                         shift and go to state 12
    number                         shift and go to state 13

state 58

    (6) function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .
    DEF             reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    RETURN          reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    LPAREN          reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    DOUBLE          reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    FLOAT           reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    ULONG           reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    LONG            reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    UINT            reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    INT             reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    USHORT          reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    SHORT           reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    UCHAR           reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    CHAR            reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    NAME            reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    STRING          reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    DECIMAL         reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    BINARY          reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    OCTAL           reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    HEXIDECIMAL     reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)
    $end            reduce using rule 6 (function_def -> DEF name LPAREN tuple RPAREN ARROW name LBRACE statements RBRACE .)


Conflicts:

shift/reduce conflict for RETURN in state 3 resolved as shift
shift/reduce conflict for LPAREN in state 3 resolved as shift
shift/reduce conflict for DOUBLE in state 3 resolved as shift
shift/reduce conflict for FLOAT in state 3 resolved as shift
shift/reduce conflict for ULONG in state 3 resolved as shift
shift/reduce conflict for LONG in state 3 resolved as shift
shift/reduce conflict for UINT in state 3 resolved as shift
shift/reduce conflict for INT in state 3 resolved as shift
shift/reduce conflict for USHORT in state 3 resolved as shift
shift/reduce conflict for SHORT in state 3 resolved as shift
shift/reduce conflict for UCHAR in state 3 resolved as shift
shift/reduce conflict for CHAR in state 3 resolved as shift
shift/reduce conflict for NAME in state 3 resolved as shift
shift/reduce conflict for STRING in state 3 resolved as shift
shift/reduce conflict for DECIMAL in state 3 resolved as shift
shift/reduce conflict for BINARY in state 3 resolved as shift
shift/reduce conflict for OCTAL in state 3 resolved as shift
shift/reduce conflict for HEXIDECIMAL in state 3 resolved as shift
shift/reduce conflict for RETURN in state 31 resolved as shift
shift/reduce conflict for LPAREN in state 31 resolved as shift
shift/reduce conflict for DOUBLE in state 31 resolved as shift
shift/reduce conflict for FLOAT in state 31 resolved as shift
shift/reduce conflict for ULONG in state 31 resolved as shift
shift/reduce conflict for LONG in state 31 resolved as shift
shift/reduce conflict for UINT in state 31 resolved as shift
shift/reduce conflict for INT in state 31 resolved as shift
shift/reduce conflict for USHORT in state 31 resolved as shift
shift/reduce conflict for SHORT in state 31 resolved as shift
shift/reduce conflict for UCHAR in state 31 resolved as shift
shift/reduce conflict for CHAR in state 31 resolved as shift
shift/reduce conflict for NAME in state 31 resolved as shift
shift/reduce conflict for STRING in state 31 resolved as shift
shift/reduce conflict for DECIMAL in state 31 resolved as shift
shift/reduce conflict for BINARY in state 31 resolved as shift
shift/reduce conflict for OCTAL in state 31 resolved as shift
shift/reduce conflict for HEXIDECIMAL in state 31 resolved as shift
shift/reduce conflict for COMMA in state 43 resolved as shift