(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{387:function(e,s,t){"use strict";t.r(s);var r=t(42),l=Object(r.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"steps-for-testing"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#steps-for-testing"}},[e._v("#")]),e._v(" Steps for Testing")]),e._v(" "),t("p",[e._v("For each tutorial step, the step must pass these stages of processing and compilation in order.")]),e._v(" "),t("ol",[t("li",[e._v("Preprocessor\n"),t("ul",[t("li",[e._v("All Macros must successfully resolve")]),e._v(" "),t("li",[e._v("All comments must be striped")]),e._v(" "),t("li",[e._v("Verify by hand.")])])]),e._v(" "),t("li",[e._v("Parser\n"),t("ul",[t("li",[e._v("The syntax must parse without any errors.")]),e._v(" "),t("li",[e._v("The parser must generate a valid parse tree.")]),e._v(" "),t("li",[e._v("The parse tree must match the code.")]),e._v(" "),t("li",[e._v("Verify by hand")])])]),e._v(" "),t("li",[e._v("Compiler\n"),t("ul",[t("li",[e._v("Parse Tree must compile to valid custom assembly.")]),e._v(" "),t("li",[e._v("Assembly must result in desired action")]),e._v(" "),t("li",[e._v("Verify by hand")])])]),e._v(" "),t("li",[e._v("Assembler\n"),t("ul",[t("li",[e._v("Must produce valid bytecode.")]),e._v(" "),t("li",[e._v("Bytecode must match the assembly")]),e._v(" "),t("li",[e._v("Hand check by dissassembling, compareing, and reassembling")])])]),e._v(" "),t("li",[e._v("Interpreter\n"),t("ul",[t("li",[e._v("Must produce desired result.")]),e._v(" "),t("li",[e._v("Verify by hand")])])])])])}),[],!1,null,null,null);s.default=l.exports}}]);